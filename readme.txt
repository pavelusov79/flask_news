Новостной портал

Стэк: flask, sqlalchemy, postgres, mongo, flask-admin, flask-login, flask-wtf. 
Полный список зависимостей и версии пакетов указаны в requirements.txt.

Проект разбит на модули (blueprints). 

База с новостями была заполнена с помощью парсера новостей. Сначала новости спасрены (parser.py) в БД mongo,  затем с помощью скрипта (mongo_to_db.py) переброшены в posgres.

Возможности проекта:

1. Реализована админка на основе расширения flask-admin.
CRUD операции с моделями User, News, Tags, Comments.
Также реализован просмотр посещений сайта (Statistics) - переписан класс и шаблон.
Шаблон гл станицы админки также изменен.

Админ портала: flask_admin, пароль: Flask_admin

2. Регистрация и авторизация пользователей.
При регистрации добавлена валидация пароля.
При авторизации суперпользователя переход в админку, при авторизации обычного пользователя на ту страницу с которой авторизовался.

3. Просмотр новостей, просмотр отдельной новости, переход по категориям новостей.

4. Поиск новостей (по тэгам и по поиску ключевого слова/слов в названии статьи)

5. На станице отдельной новости реализованы добавление лайков, возможность поделиться новостью по почте или через соц сети, а также возможность оставить комментарий к статье.
К статье могут оставлять комментарии только авторизованные пользователи.
При отправке комментария он сразу не отображается под статьей. Если комментарий не противоречит правилам портала то админ портала через админку делает комментарий активным (ставит галку is_active) и он появляется под статьей. В случае же отказа админ может в поле faild_moderation написать причину отказа и при сохранении данный текст автоматически отправится на почту пользователя (комментатора).

Также на странице отдельной новости ее можно добавить в закладки или удалить из закладок. Все добавленные новости отображаются у авторизованного пользователя во вкладке "закладки". Добавлять в закладки могут только авторизованные пользователи. На странице "закладки" новости можно также удалить из закладок.

Проект развернут на сервере http://45.8.229.132 

Развернут с помощью gunicorn + nginx

Также на сервере в crontab записано расписание ежедневно парсить по новой статье (скрипт parse_one_add_db.py)

Самая последняя статья отбражается на гл странице.